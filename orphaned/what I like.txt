I need to turn this app (including the files themselves, the db schema, RLS policies, any edge functions etc) into a system that I can reuse for other sites.

Here is what I like--and I am sure this list is non-exhaustive--of things that I will use on all my builds:
board 
--complete multi-tenancy
--a super admin user with full access to all areas
--a working notifications system 
--a functioning settings area
--user profiles
--a dashboard
--2fa working
--a strong data management system allowing for tenant selection etc and the uploading of clients et al (/dashboard/admin/data-management)
--a subscription management system to handle paying customers: (/dashboard/subscription)
--vercel
--supabase
--RLS
--progress tracking for goals (/dashboard/progress) 
--team management (/dashboard/team)
--sign in / sign up / log-out system works well
--basic Ai integration is already in-place and functioning
--full GDPR compliance
--Accessibility standards met


What we need to check:
--do we have a proper separation of concerns (UI, API, database, but please do not over-engineer this)
--are there security keys hardcoded into the files
--does it run as an SPA when instead the functions should be siloed and disparate so that when I am fixing one thing, I am not breaking another thing
--are there any files that seem to be orphaned code that ca be moved into the "orphaned" directory so that we can see if they truly are needed.

what are the steps we need to take to realize this dream? 
NOTE: currently you are already in the project we need to modify






---//---





COMING SOON:
Social aspects, for example skool communities and simple chatting between users
A RAG Chatbot

BRAINSTORM:
I need to know what features would be useable for an insurance company app that I have created for its employees / agents to use as their CRM... so perhaps it has Ai functionality that tells them the next best step to take or maybe it has a dashboard that tracks the KPIs they feel are important and I want your help to brainstorm. Do not output code please. This is just a feature conversation. Here is what it does now... what do you suggest I add:
I'd be happy to help you brainstorm features for your insurance company 
app. Based on my description, here are some starter ideas:

AI-powered features:

1. Next Best Step (NBS) Recommendations: As I mentioned, an AI algorithm can analyze the agent's current lead, customer engagement, and sales pipeline to suggest the next best action or follow-up step.
2. Predictive Lead Scoring: Use machine learning to score leads based on their likelihood of converting into a sale or client.
3. Automated Task Assignments: Based on the NBS recommendations and lead scoring, the app can automatically assign tasks or actions to agents.

Dashboard features:

1. Key Performance Indicator (KPI) Tracking: As I mentioned, track relevant KPIs such as sales performance, customer satisfaction, and agent productivity.
2. Real-time Lead Pipeline Visualization: Display a graphical representation of the lead pipeline, showing the current stage and progress of each lead.
3. Agent Scorecard: Provide an overall score for each agent based on their performance, highlighting areas for improvement.

CRM features:

1. Contact Management: Allow agents to store and manage client information, including contact details, history, and communication records.
2. Sales Pipeline Management: Enable agents to create and track sales pipelines, including stages and milestones.
3. Communication Tools: Integrate a messaging system or email integration for agents to communicate with clients and colleagues.

Additional features:

1. Training and Development Resources: Offer access to online training sessions, webinars, or tutorials to help agents improve their skills and knowledge.
2. Compliance and Regulatory Reporting: Provide tools for agents to track and report compliance requirements, such as licensing renewals or regulatory updates.
3. Integration with External Systems: Integrate the app with other systems, such as CRM software, marketing automation platforms, or accounting software.

Personalization features:

1. User Profiles: Allow users to customize their profile settings, including notifications and dashboards.
2. Customizable Dashboards: Enable users to create multiple custom dashboards for different areas of the business or personal use.
3. Push Notifications: Send targeted push notifications based on user preferences or performance metrics.

These features should give us a solid starting point for developing a comprehensive CRM app for our insurance company employees/agents.

And here is what I have already 

-- complete multi-tenancy
-- a super admin user with full access to all areas
-- a working notifications system 
-- a functioning settings area
-- user profiles
-- a dashboard
-- 2fa working
-- a strong data management system allowing for tenant selection etc and the uploading of clients et al (/dashboard/admin/data-management)
-- a subscription management system to handle paying customers: (/dashboard/subscription)
-- vercel
-- supabase
-- RLS
-- progress tracking for goals (/dashboard/progress) 
-- team management (/dashboard/team)
-- sign in / sign up / log-out system works well
-- basic Ai integration is already in-place and functioning
-- full GDPR compliance:
- ✅ Right to Access (Data Export)
- ✅ Right to Rectification (Data Correction)
- ✅ Right to Erasure (Data Deletion)
- ✅ Right to Portability (Data Export)
- ✅ Right to Object (Consent Management)
- ✅ Data Minimization
- ✅ Privacy by Design
- ✅ Consent Management
- ✅ Data Retention Policies

-- Accessibility standards met:
- ✅ WCAG 2.1 AA compliance
- ✅ Section 508 compliance
- ✅ EN 301 549 compliance (EU)
- ✅ German BITV 2.0 compliance

With the existing features, it sounds like we may have a solid foundation for a comprehensive CRM app. But here are some additional ideas to consider:

Enhancing the dashboard:

1. Intelligent Insights: Use machine learning algorithms to provide agents with actionable insights and recommendations based on their data.
2. Goal-based Dashboards: Create separate dashboards for different goals, such as sales performance or customer satisfaction, to help agents focus on specific objectives.
3. Heatmap Analysis: Visualize agent performance using heatmaps, showing areas of high productivity and potential blind spots.

Expanding the AI integration:

1. Predictive Analytics: Use natural language processing (NLP) to analyze client communication and predict their needs or likelihood of conversion.
2. Automated Reporting: Generate reports based on data analysis, such as sales trends or customer sentiment, and send them to agents or super admins for review.
3. Chatbot Integration: Integrate a conversational AI chatbot that can engage with clients and provide basic support.

Streamlining workflows:

1. Task Automation: Use an as-yet unbuilt method to automate repetitive tasks, such as sending reminders or notifications, freeing up agent time for more complex activities.
2. Workflow Builder: Create a visual workflow builder that allows super admins to define custom processes for agents, including conditional logic and automated steps.

Enhancing user experience:

1. Personalized Onboarding: Use user profiles and data to provide personalized onboarding experiences for new agents or clients.
2. Intelligent Search: Implement an intelligent search function that suggests relevant contacts, documents, or information based on agent queries.
3. [OPTIONAL] Mobile Optimization: Ensure the app is optimized for mobile devices, providing a seamless experience for agents on-the-go.

Additional features:

1. Integration with Accounting Software: Integrate the app with accounting software to streamline financial management and provide real-time visibility into revenue and expenses.
2. Social Media Integration: Allow agents to share client information or updates on social media platforms, improving brand awareness and engagement. I have Postiz for this, which is an open-source Social Media Manager.
3. Collaboration Tools: Add a few simple collaboration tools, such as a simple chat functionality or a simplified skool-type community functionality, to facilitate communication between agents and colleagues.

Security and compliance:

1. Regular Security Audits: Conduct regular security audits to identify potential vulnerabilities and address them promptly.
2. [MANDATORY] Data Backups: Implement a robust data backup system to ensure agent data is protected in case of an outage or data loss.
3. Compliance Monitoring: Regularly monitor the app for compliance with regulatory requirements, such as GDPR and industry standards.

By building on this existing foundation, we can further enhance the user experience, streamline workflows, and provide agents with more actionable insights to drive business growth.

